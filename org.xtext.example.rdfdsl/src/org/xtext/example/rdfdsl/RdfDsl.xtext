grammar org.xtext.example.rdfdsl.RdfDsl with org.eclipse.xtext.common.Terminals

generate rdfDsl "http://www.xtext.org/example/rdfdsl/RdfDsl"

Root:
	(model=Model)? (data=Data)? (query=Query)?;

Model:
	'model' namespaces+=Namespace+;

Data:
	'data' namespaces+=DataNamespace+;
	
Query:
	'query'	select+=Select+
;

Select:
	'SELECT' selectList+=ID (',' selectList+=ID)* where=Where
;

Where:
	'WHERE' constraintList+=Triple+
;

Triple:
	subject=ID predicate=ID object=QueryObject
;

QueryObject:
	ID | STRING
;

PropertyBinding:
	name=ID ':' property+=DataProperty+;

DataProperty:
	prop=ID ((value+=ID (',' value+=ID)*) | sValue=SimpleValue) // TODO: skal nok laves lidt bedre
;

SimpleValue:
	INT | STRING;

Binding:
	varList+=ID (',' varList+=ID)* 'is' entity=ID;

From:
	'from' importedNs=Link '[' listProp+=ID+ (',' listProp+=ID)*']';

Namespace:
	'namespace' name=ID link=Link (classes+=Class)*;

DataNamespace:
	'namespace' name=ID link=Link (from=From)? (bindings+=Binding)* (propBind+=PropertyBinding)+;

Class returns _Class:
	'class' name=ID (':' superClass=ID)? (properties+=Property)*;

Property returns _Property:
	'property' name=ID type=(ObjectType | SimpleType) (cardinality=Cardinality)?; // default card is 0..*

Cardinality:
	'cardinality' min=INT '..' max=Entries;

ObjectType returns Type:
	{ClassRef} id=ID;

SimpleType returns Type:
	{_String} 'String' | {_Integer} 'Integer' | {_Float} 'Float';

Entries:
	INT | '*';

Link:
	URL;

URL:
	STRING;
